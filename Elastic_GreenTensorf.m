function G=Elastic_GreenTensorf(omega,kp,ks,x,y)
%% shear wave velocity
% cs = omega/ks;
%% pressure wave Green Tensor
w2 = 1/omega^2 ;
k1=kp*(1+0.000000001i);
k2=ks*(1+0.000000001i);
n=size(x);
G=zeros(4,n(2));
l=100*(kp+ks)+100/min(x(2,:))+100/min(y(2,:));
for j=1:n(2)
    if x(2,j)<y(2,j)
       g=@(t)(1/(4*pi)*w2)./(t.^2-k1.^2).^(1/2).*(t.^2).*exp((t.^2-k1.^2).^(1/2)*(x(2,j)-y(2,j))+t*(y(1,j)-x(1,j))*1i)+(1/(4*pi)*w2)./(t.^2-k2.^2).^(1/2).*(-t.^2+k2^2).*exp((t.^2-k2.^2).^(1/2)*(x(2,j)-y(2,j))+t*(y(1,j)-x(1,j))*1i);
       f=@(t)(1/(4*pi)*w2)./(t.^2-k1.^2).^(1/2).*(1i*t.*(t.^2-k1.^2).^(1/2)).*exp((t.^2-k1.^2).^(1/2)*(x(2,j)-y(2,j))+t*(y(1,j)-x(1,j))*1i)+(1/(4*pi)*w2)./(t.^2-k2.^2).^(1/2).*(-1i*t.*(t.^2-k2.^2).^(1/2)).*exp((t.^2-k2.^2).^(1/2)*(x(2,j)-y(2,j))+t*(y(1,j)-x(1,j))*1i);
       h=@(t)(1/(4*pi)*w2)./(t.^2-k1.^2).^(1/2).*(-t.^2+k1.^2).*exp((t.^2-k1.^2).^(1/2)*(x(2,j)-y(2,j))+t*(y(1,j)-x(1,j))*1i)+(1/(4*pi)*w2)./(t.^2-k2.^2).^(1/2).*(t.^2).*exp((t.^2-k2.^2).^(1/2)*(x(2,j)-y(2,j))+t*(y(1,j)-x(1,j))*1i);
    else
       g=@(t)(1/(4*pi)*w2)./(t.^2-k1.^2).^(1/2).*(t.^2).*exp((t.^2-k1.^2).^(1/2)*(y(2,j)-x(2,j))+t*(y(1,j)-x(1,j))*1i)+(1/(4*pi)*w2)./(t.^2-k2.^2).^(1/2).*(-t.^2+k2^2).*exp((t.^2-k2.^2).^(1/2)*(y(2,j)-x(2,j))+t*(y(1,j)-x(1,j))*1i);
       f=@(t)(1/(4*pi)*w2)./(t.^2-k1.^2).^(1/2).*(-1i*t.*(t.^2-k1.^2).^(1/2)).*exp((t.^2-k1.^2).^(1/2)*(y(2,j)-x(2,j))+t*(y(1,j)-x(1,j))*1i)+(1/(4*pi)*w2)./(t.^2-k2.^2).^(1/2).*(1i*t.*(t.^2-k2.^2).^(1/2)).*exp((t.^2-k2.^2).^(1/2)*(y(2,j)-x(2,j))+t*(y(1,j)-x(1,j))*1i);
       h=@(t)(1/(4*pi)*w2)./(t.^2-k1.^2).^(1/2).*(-t.^2+k1.^2).*exp((t.^2-k1.^2).^(1/2)*(y(2,j)-x(2,j))+t*(y(1,j)-x(1,j))*1i)+(1/(4*pi)*w2)./(t.^2-k2.^2).^(1/2).*(t.^2).*exp((t.^2-k2.^2).^(1/2)*(y(2,j)-x(2,j))+t*(y(1,j)-x(1,j))*1i);
    end
    G(1,j)=integral(g,-l,l);
    G(2,j)=integral(f,-l,l);
    G(3,j)=G(2,j);
    G(4,j)=integral(h,-l,l);
    
    
end